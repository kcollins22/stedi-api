# this is a comment
# this is the version of YAML we are using with the Kubernetes API
apiVersion: apps/v1
# The kind is the type of Kubernetes resource we are using
# A deployment is when we run code on a server
kind: Deployment
# Metadata is the information related to the object we created in Kubernetes
metadata:
# the name here is the name of our deployment
  name: stedi-kevin-collins
spec:
# Replicasrefers ti the number of pods we deploy
  replicas: 1
# A selector is a route to my pod
  selector:
# MatchLabels are a label for my selector
    matchLabels:
# App is a specific kind of label for my pod
      app: stedi-kevin-collins
# The template describes all the features of my pod
  template:
    metadata:
      labels:
        app: stedi-kevin-collins
# The spec refers to the specification of my containers in my pod
    spec:
# containers can have one or more Docker containers in the pod
      containers:
# the name of the container is specified below
        - name: stedi-kevin-collins
# the image is a prebuild file containing the operating system
          image: gcr.io/cit262-group-project/stedi-kevin-collins
# The ports is a list of tcp ports the pod listens on
          ports:
# The container port is a specific port the pod listens on
          - containerPort: 4567
# Resources are the compute resources used by the pod in the cloud
          resources:
# Limits represent the max amount of cpu and memory allowed for the pod
            limits:
# CPU is the max amount of CPU that can by used by the pod
              cpu: ".125"
# Memory is the max amount of memory that can by used by the pod
              memory: "500Mi"
# Requests is the minimum amount of compute resources used by the pod
            requests:
# CPU is the minimum amount of CPU the pod needs to run
                cpu: ".125"
# Memory is the minimum amount of memory the pod needs to run
                memory: "250Mi"
# LivenessProbe is a configuration that checks the pod for health
          livenessProbe:
# HttpGet instructs kupernetes to do a HTTP request to check health
            httpGet:
# Path defines the url to use when doing the HTTP request
              path: /
# Port defines the port to use when doing the HTTP request
              port: 4567
# initialDelaySeconds tells kupernetes to wait before doing a request
            initialDelaySeconds: 10
# periodSeconds tells Kubernetes how often to check health
            periodSeconds: 3
          

---
# # apiVersion tells kubernetes which verion of yaml to use
# apiVersion: v1
# # kind tells kubernetes what kind of object to create
# kind: Service
# # metadata containsattributes about the object
# metadata:
# # name is the name of the object we are creating
#   name: stedi-kevin-collins-loadbalancer
# # spect is the specification for the object (or the loadbalancer)
# spec:
# # selector tells the network layer  how to find the right pod
#   selector:
# # app tells the selector which app to send the traffic to
#     app: stedi-kevin-collins
# # type tells kubernetes the type of service we want
# # a LoadBalancer distributes network packets to one or more pods
#   type: LoadBalancer
# # ports are a list of ports the Load Balancer listens on
#   ports:
# # port is the port we want to losten on the network
#     - port: 80
# # target port is the port the pod listens on inside kubernetes
#       targetPort: 4567


apiVersion: v1
kind: Service
metadata:
  name: stedi-nodeport-kevin-collins
spec:
  selector:
    app: stedi-kevin-collins
  type: NodePort
  ports:
    - port: 80
      targetPort: 4567
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: stedi-ingress-kevin-collins
  annotations:
    kubernetes.io/ingress.global-static-ip-name: stedi-public-kevin-collins
    networking.gke.io/managed-certificates: stedi-certificate-kevin-collins
    kubernetes.io/ingress.allow-http: "false"
    kubernetes.io/ingress.class: "gce"
spec:
  defaultBackend:
    service:
      name: stedi-nodeport-kevin-collins
      port: 
        number: 80
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: stedi-certificate-kevin-collins
spec:
  domains:
    - kevincollins.cit262.com
